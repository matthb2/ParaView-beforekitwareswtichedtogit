INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR})

SET(XdmfUtilSource
    XdmfFortran
    XdmfDiff
)

SET(XDMF_PYTHON_FILE ${CMAKE_CURRENT_SOURCE_DIR}/Xdmf.py)
IF(XDMF_REGENERATE_WRAPPERS)
  IF(SWIG_EXECUTABLE)
    FOREACH(LANGUAGE Python)
      STRING(TOLOWER ${LANGUAGE} lang)
      SET(swigtarget ${CMAKE_CURRENT_BINARY_DIR}/XdmfUtils${LANGUAGE}.cxx)
      SET(XDMF_SWIG_INCLUDES ${XDMF_SWIG_INCLUDES} -I${CMAKE_CURRENT_SOURCE_DIR})
      ADD_CUSTOM_COMMAND(
        OUTPUT ${swigtarget}
        DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/XdmfUtils.i
        COMMAND ${SWIG_EXECUTABLE}
        ARGS -v -c++ -make_default -includeall "-${lang}" ${swig_extra_args} ${XDMF_SWIG_INCLUDES} -o "${swigtarget}" XdmfUtils.i)
    ENDFOREACH(LANGUAGE)
    # ADD_CUSTOM_TARGET(RerunSwig DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/XdmfUtilsPython.cxx)
  ENDIF(SWIG_EXECUTABLE)
  SET(XDMF_UTILS_PYTHON_FILE ${CMAKE_CURRENT_BINARY_DIR}/XdmfUtils.py)
ENDIF(XDMF_REGENERATE_WRAPPERS)

IF(XDMF_WRAP_PYTHON)
  ADD_LIBRARY(_XdmfUtils MODULE XdmfUtilsPython.cxx)
  TARGET_LINK_LIBRARIES(_XdmfUtils XdmfUtils)
  IF(WIN32 OR APPLE)
    TARGET_LINK_LIBRARIES(_XdmfUtils ${PYTHON_LIBRARY})
  ENDIF(WIN32 OR APPLE)
  SET_TARGET_PROPERTIES(_XdmfUtils PROPERTIES PREFIX "")
  ADD_DEPENDENCIES(_XdmfUtils XdmfUtils)
  INSTALL(FILES ${XDMF_UTILS_PYTHON_FILE}
      DESTINATION ${XDMF_WRAP_PYTHON_INSTALL_PY_DIR}
      COMPONENT Runtime
      )
ENDIF(XDMF_WRAP_PYTHON)

ADD_LIBRARY(XdmfUtils ${LIBTYPE} ${XdmfUtilSource})
TARGET_LINK_LIBRARIES(XdmfUtils Xdmf)
ADD_EXECUTABLE(XdmfDiff XdmfDiffUtil)
TARGET_LINK_LIBRARIES(XdmfDiff XdmfUtils)

IF(NOT XDMF_INSTALL_NO_LIBRARIES)
  INSTALL(TARGETS XdmfDiff XdmfUtils
    RUNTIME DESTINATION ${XDMF_INSTALL_BIN_DIR_CM24} COMPONENT Runtime
    LIBRARY DESTINATION ${XDMF_INSTALL_LIB_DIR_CM24} COMPONENT Runtime
    ARCHIVE DESTINATION ${XDMF_INSTALL_LIB_DIR_CM24} COMPONENT Development)
  INSTALL(
    FILES XdmfSTLConverter.txx
    DESTINATION ${XDMF_INSTALL_INCLUDE_DIR_CM24})
  IF(XDMF_WRAP_PYTHON)
    INSTALL(
        TARGETS _XdmfUtils
        DESTINATION
        ${XDMF_WRAP_PYTHON_INSTALL_LIB_DIR})
  ENDIF(XDMF_WRAP_PYTHON)
ENDIF(NOT XDMF_INSTALL_NO_LIBRARIES)
