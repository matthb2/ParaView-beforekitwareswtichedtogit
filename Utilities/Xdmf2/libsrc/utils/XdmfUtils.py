# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.39
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.
# This file is compatible with both classic and new-style classes.

from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_XdmfUtils', [dirname(__file__)])
        except ImportError:
            import _XdmfUtils
            return _XdmfUtils
        if fp is not None:
            try:
                _mod = imp.load_module('_XdmfUtils', fp, pathname, description)
            finally:
                fp.close()
                return _mod
    _XdmfUtils = swig_import_helper()
    del swig_import_helper
else:
    import _XdmfUtils
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


_FILE_OFFSET_BITS = _XdmfUtils._FILE_OFFSET_BITS
XDMF_VERSION = _XdmfUtils.XDMF_VERSION
XDMF_VERSION_STRING = _XdmfUtils.XDMF_VERSION_STRING
XDMF_SUCCESS = _XdmfUtils.XDMF_SUCCESS
XDMF_FAIL = _XdmfUtils.XDMF_FAIL
XDMF_TRUE = _XdmfUtils.XDMF_TRUE
XDMF_FALSE = _XdmfUtils.XDMF_FALSE
XDMF_MAX_DIMENSION = _XdmfUtils.XDMF_MAX_DIMENSION
XDMF_MAX_STRING_LENGTH = _XdmfUtils.XDMF_MAX_STRING_LENGTH
XDMF_DEFAULT_INDEX = _XdmfUtils.XDMF_DEFAULT_INDEX
XDMF_SELECT_SLAB = _XdmfUtils.XDMF_SELECT_SLAB
XDMF_SELECT_INDEX = _XdmfUtils.XDMF_SELECT_INDEX
XDMF_UNKNOWN_TYPE = _XdmfUtils.XDMF_UNKNOWN_TYPE
XDMF_INT8_TYPE = _XdmfUtils.XDMF_INT8_TYPE
XDMF_INT16_TYPE = _XdmfUtils.XDMF_INT16_TYPE
XDMF_INT32_TYPE = _XdmfUtils.XDMF_INT32_TYPE
XDMF_INT64_TYPE = _XdmfUtils.XDMF_INT64_TYPE
XDMF_FLOAT32_TYPE = _XdmfUtils.XDMF_FLOAT32_TYPE
XDMF_FLOAT64_TYPE = _XdmfUtils.XDMF_FLOAT64_TYPE
XDMF_UINT8_TYPE = _XdmfUtils.XDMF_UINT8_TYPE
XDMF_UINT16_TYPE = _XdmfUtils.XDMF_UINT16_TYPE
XDMF_UINT32_TYPE = _XdmfUtils.XDMF_UINT32_TYPE
XDMF_COMPOUND_TYPE = _XdmfUtils.XDMF_COMPOUND_TYPE
class XdmfObject(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, XdmfObject, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, XdmfObject, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _XdmfUtils.new_XdmfObject()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _XdmfUtils.delete_XdmfObject
    __del__ = lambda self : None;
    def GetClassName(self): return _XdmfUtils.XdmfObject_GetClassName(self)
    def SetDebug(self, *args): return _XdmfUtils.XdmfObject_SetDebug(self, *args)
    def GetDebug(self): return _XdmfUtils.XdmfObject_GetDebug(self)
    def GetGlobalDebug(self): return _XdmfUtils.XdmfObject_GetGlobalDebug(self)
    def SetGlobalDebug(self, *args): return _XdmfUtils.XdmfObject_SetGlobalDebug(self, *args)
    def DebugOn(self): return _XdmfUtils.XdmfObject_DebugOn(self)
    def DebugOff(self): return _XdmfUtils.XdmfObject_DebugOff(self)
    def GlobalDebugOn(self): return _XdmfUtils.XdmfObject_GlobalDebugOn(self)
    def GlobalDebugOff(self): return _XdmfUtils.XdmfObject_GlobalDebugOff(self)
    def GetUniqueName(self, NameBase = None): return _XdmfUtils.XdmfObject_GetUniqueName(self, NameBase)
XdmfObject_swigregister = _XdmfUtils.XdmfObject_swigregister
XdmfObject_swigregister(XdmfObject)


def SetGlobalDebugOn():
  return _XdmfUtils.SetGlobalDebugOn()
SetGlobalDebugOn = _XdmfUtils.SetGlobalDebugOn

def SetGlobalDebugOff():
  return _XdmfUtils.SetGlobalDebugOff()
SetGlobalDebugOff = _XdmfUtils.SetGlobalDebugOff

def GetGlobalDebug():
  return _XdmfUtils.GetGlobalDebug()
GetGlobalDebug = _XdmfUtils.GetGlobalDebug

def SetGlobalDebug(*args):
  return _XdmfUtils.SetGlobalDebug(*args)
SetGlobalDebug = _XdmfUtils.SetGlobalDebug

def XdmfObjectToHandle(*args):
  return _XdmfUtils.XdmfObjectToHandle(*args)
XdmfObjectToHandle = _XdmfUtils.XdmfObjectToHandle

def HandleToXdmfObject(*args):
  return _XdmfUtils.HandleToXdmfObject(*args)
HandleToXdmfObject = _XdmfUtils.HandleToXdmfObject

def VoidPointerHandleToXdmfPointer(*args):
  return _XdmfUtils.VoidPointerHandleToXdmfPointer(*args)
VoidPointerHandleToXdmfPointer = _XdmfUtils.VoidPointerHandleToXdmfPointer

def XdmfTypeToHDF5Type(*args):
  return _XdmfUtils.XdmfTypeToHDF5Type(*args)
XdmfTypeToHDF5Type = _XdmfUtils.XdmfTypeToHDF5Type

def HDF5TypeToXdmfType(*args):
  return _XdmfUtils.HDF5TypeToXdmfType(*args)
HDF5TypeToXdmfType = _XdmfUtils.HDF5TypeToXdmfType

def XdmfTypeToString(*args):
  return _XdmfUtils.XdmfTypeToString(*args)
XdmfTypeToString = _XdmfUtils.XdmfTypeToString

def StringToXdmfType(*args):
  return _XdmfUtils.StringToXdmfType(*args)
StringToXdmfType = _XdmfUtils.StringToXdmfType

def XdmfTypeToClassString(*args):
  return _XdmfUtils.XdmfTypeToClassString(*args)
XdmfTypeToClassString = _XdmfUtils.XdmfTypeToClassString
XDMF_SELECTALL = _XdmfUtils.XDMF_SELECTALL
XDMF_HYPERSLAB = _XdmfUtils.XDMF_HYPERSLAB
XDMF_COORDINATES = _XdmfUtils.XDMF_COORDINATES
class XdmfDataDesc(XdmfObject):
    __swig_setmethods__ = {}
    for _s in [XdmfObject]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, XdmfDataDesc, name, value)
    __swig_getmethods__ = {}
    for _s in [XdmfObject]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, XdmfDataDesc, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _XdmfUtils.new_XdmfDataDesc()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _XdmfUtils.delete_XdmfDataDesc
    __del__ = lambda self : None;
    def Print(self): return _XdmfUtils.XdmfDataDesc_Print(self)
    def SetNumberType(self, *args): return _XdmfUtils.XdmfDataDesc_SetNumberType(self, *args)
    def SetNumberTypeFromString(self, *args): return _XdmfUtils.XdmfDataDesc_SetNumberTypeFromString(self, *args)
    def GetNumberType(self): return _XdmfUtils.XdmfDataDesc_GetNumberType(self)
    def GetNumberTypeAsString(self): return _XdmfUtils.XdmfDataDesc_GetNumberTypeAsString(self)
    def SetShape(self, *args): return _XdmfUtils.XdmfDataDesc_SetShape(self, *args)
    def GetShape(self, *args): return _XdmfUtils.XdmfDataDesc_GetShape(self, *args)
    def GetShapeAsString(self): return _XdmfUtils.XdmfDataDesc_GetShapeAsString(self)
    def CopySelection(self, *args): return _XdmfUtils.XdmfDataDesc_CopySelection(self, *args)
    def CopyShape(self, *args): return _XdmfUtils.XdmfDataDesc_CopyShape(self, *args)
    def CopyType(self, *args): return _XdmfUtils.XdmfDataDesc_CopyType(self, *args)
    def SetNumberOfElements(self, *args): return _XdmfUtils.XdmfDataDesc_SetNumberOfElements(self, *args)
    def SetShapeFromString(self, *args): return _XdmfUtils.XdmfDataDesc_SetShapeFromString(self, *args)
    def SelectAll(self): return _XdmfUtils.XdmfDataDesc_SelectAll(self)
    def SelectHyperSlab(self, *args): return _XdmfUtils.XdmfDataDesc_SelectHyperSlab(self, *args)
    def SelectHyperSlabFromString(self, *args): return _XdmfUtils.XdmfDataDesc_SelectHyperSlabFromString(self, *args)
    def GetHyperSlab(self, *args): return _XdmfUtils.XdmfDataDesc_GetHyperSlab(self, *args)
    def GetHyperSlabAsString(self): return _XdmfUtils.XdmfDataDesc_GetHyperSlabAsString(self)
    def SelectCoordinates(self, *args): return _XdmfUtils.XdmfDataDesc_SelectCoordinates(self, *args)
    def SelectCoordinatesFromString(self, *args): return _XdmfUtils.XdmfDataDesc_SelectCoordinatesFromString(self, *args)
    def GetCoordinates(self, Start = 0, Nelements = 0): return _XdmfUtils.XdmfDataDesc_GetCoordinates(self, Start, Nelements)
    def GetCoordinatesAsString(self, Start = 0, Nelements = 0): return _XdmfUtils.XdmfDataDesc_GetCoordinatesAsString(self, Start, Nelements)
    def GetSelectionSize(self): return _XdmfUtils.XdmfDataDesc_GetSelectionSize(self)
    def GetNumberOfElements(self): return _XdmfUtils.XdmfDataDesc_GetNumberOfElements(self)
    def GetCompression(self): return _XdmfUtils.XdmfDataDesc_GetCompression(self)
    def SetCompression(self, *args): return _XdmfUtils.XdmfDataDesc_SetCompression(self, *args)
    def GetRank(self): return _XdmfUtils.XdmfDataDesc_GetRank(self)
    def GetDimension(self, *args): return _XdmfUtils.XdmfDataDesc_GetDimension(self, *args)
    def GetStart(self, *args): return _XdmfUtils.XdmfDataDesc_GetStart(self, *args)
    def GetStride(self, *args): return _XdmfUtils.XdmfDataDesc_GetStride(self, *args)
    def GetCount(self, *args): return _XdmfUtils.XdmfDataDesc_GetCount(self, *args)
    def GetSelectionType(self): return _XdmfUtils.XdmfDataDesc_GetSelectionType(self)
    def GetSelectionTypeAsString(self): return _XdmfUtils.XdmfDataDesc_GetSelectionTypeAsString(self)
    def GetDataType(self): return _XdmfUtils.XdmfDataDesc_GetDataType(self)
    def GetDataSpace(self): return _XdmfUtils.XdmfDataDesc_GetDataSpace(self)
    def GetElementSize(self): return _XdmfUtils.XdmfDataDesc_GetElementSize(self)
    def AddCompoundMemberFromString(self, *args): return _XdmfUtils.XdmfDataDesc_AddCompoundMemberFromString(self, *args)
    def GetNumberOfMembers(self): return _XdmfUtils.XdmfDataDesc_GetNumberOfMembers(self)
    def GetMemberName(self, *args): return _XdmfUtils.XdmfDataDesc_GetMemberName(self, *args)
    def GetMemberLength(self, *args): return _XdmfUtils.XdmfDataDesc_GetMemberLength(self, *args)
    def GetMemberSize(self, *args): return _XdmfUtils.XdmfDataDesc_GetMemberSize(self, *args)
    def GetMemberShape(self, *args): return _XdmfUtils.XdmfDataDesc_GetMemberShape(self, *args)
    def GetMemberShapeAsString(self, *args): return _XdmfUtils.XdmfDataDesc_GetMemberShapeAsString(self, *args)
    def GetMemberType(self, *args): return _XdmfUtils.XdmfDataDesc_GetMemberType(self, *args)
    def GetMemberTypeAsString(self, *args): return _XdmfUtils.XdmfDataDesc_GetMemberTypeAsString(self, *args)
    def GetMemberOffset(self, *args): return _XdmfUtils.XdmfDataDesc_GetMemberOffset(self, *args)
    def SetHeavyDataSetName(self, *args): return _XdmfUtils.XdmfDataDesc_SetHeavyDataSetName(self, *args)
    def GetHeavyDataSetName(self): return _XdmfUtils.XdmfDataDesc_GetHeavyDataSetName(self)
    def GetDsmBuffer(self): return _XdmfUtils.XdmfDataDesc_GetDsmBuffer(self)
    def SetDsmBuffer(self, *args): return _XdmfUtils.XdmfDataDesc_SetDsmBuffer(self, *args)
XdmfDataDesc_swigregister = _XdmfUtils.XdmfDataDesc_swigregister
XdmfDataDesc_swigregister(XdmfDataDesc)

def GetUnique(Pattern = None):
  return _XdmfUtils.GetUnique(Pattern)
GetUnique = _XdmfUtils.GetUnique

XDMF_ARRAY_TAG_LENGTH = _XdmfUtils.XDMF_ARRAY_TAG_LENGTH
class XdmfArray(XdmfDataDesc):
    __swig_setmethods__ = {}
    for _s in [XdmfDataDesc]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, XdmfArray, name, value)
    __swig_getmethods__ = {}
    for _s in [XdmfDataDesc]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, XdmfArray, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _XdmfUtils.new_XdmfArray()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _XdmfUtils.delete_XdmfArray
    __del__ = lambda self : None;
    def GetClassName(self): return _XdmfUtils.XdmfArray_GetClassName(self)
    def GetTagName(self): return _XdmfUtils.XdmfArray_GetTagName(self)
    def GetCoreLength(self): return _XdmfUtils.XdmfArray_GetCoreLength(self)
    def Allocate(self): return _XdmfUtils.XdmfArray_Allocate(self)
    def SetAllowAllocate(self, *args): return _XdmfUtils.XdmfArray_SetAllowAllocate(self, *args)
    def GetAllowAllocate(self): return _XdmfUtils.XdmfArray_GetAllowAllocate(self)
    def SetShape(self, *args): return _XdmfUtils.XdmfArray_SetShape(self, *args)
    def SetShapeFromString(self, *args): return _XdmfUtils.XdmfArray_SetShapeFromString(self, *args)
    def SetShapeFromSelection(self, *args): return _XdmfUtils.XdmfArray_SetShapeFromSelection(self, *args)
    def SetNumberOfElements(self, *args): return _XdmfUtils.XdmfArray_SetNumberOfElements(self, *args)
    def ReformFromString(self, *args): return _XdmfUtils.XdmfArray_ReformFromString(self, *args)
    def ReformFromSelection(self, *args): return _XdmfUtils.XdmfArray_ReformFromSelection(self, *args)
    def CopyShape(self, *args): return _XdmfUtils.XdmfArray_CopyShape(self, *args)
    def GetDataPointer(self, Index = 0): return _XdmfUtils.XdmfArray_GetDataPointer(self, Index)
    def SetDataPointer(self, *args): return _XdmfUtils.XdmfArray_SetDataPointer(self, *args)
    def Reset(self, Free = 0): return _XdmfUtils.XdmfArray_Reset(self, Free)
    def SetValueFromFloat64(self, *args): return _XdmfUtils.XdmfArray_SetValueFromFloat64(self, *args)
    def SetValueFromInt64(self, *args): return _XdmfUtils.XdmfArray_SetValueFromInt64(self, *args)
    def SetValues(self, *args): return _XdmfUtils.XdmfArray_SetValues(self, *args)
    def GetValuesAsInt8(self, *args): return _XdmfUtils.XdmfArray_GetValuesAsInt8(self, *args)
    def SetValuesFromInt8(self, *args): return _XdmfUtils.XdmfArray_SetValuesFromInt8(self, *args)
    def GetValuesAsInt32(self, *args): return _XdmfUtils.XdmfArray_GetValuesAsInt32(self, *args)
    def SetValuesFromInt32(self, *args): return _XdmfUtils.XdmfArray_SetValuesFromInt32(self, *args)
    def GetValuesAsInt64(self, *args): return _XdmfUtils.XdmfArray_GetValuesAsInt64(self, *args)
    def SetValuesFromInt64(self, *args): return _XdmfUtils.XdmfArray_SetValuesFromInt64(self, *args)
    def GetValuesAsFloat32(self, *args): return _XdmfUtils.XdmfArray_GetValuesAsFloat32(self, *args)
    def SetValuesFromFloat32(self, *args): return _XdmfUtils.XdmfArray_SetValuesFromFloat32(self, *args)
    def GetValuesAsFloat64(self, *args): return _XdmfUtils.XdmfArray_GetValuesAsFloat64(self, *args)
    def SetValuesFromFloat64(self, *args): return _XdmfUtils.XdmfArray_SetValuesFromFloat64(self, *args)
    def GetValueAsFloat64(self, *args): return _XdmfUtils.XdmfArray_GetValueAsFloat64(self, *args)
    def GetValueAsFloat32(self, *args): return _XdmfUtils.XdmfArray_GetValueAsFloat32(self, *args)
    def GetValueAsInt64(self, *args): return _XdmfUtils.XdmfArray_GetValueAsInt64(self, *args)
    def GetValueAsInt32(self, *args): return _XdmfUtils.XdmfArray_GetValueAsInt32(self, *args)
    def GetValueAsInt16(self, *args): return _XdmfUtils.XdmfArray_GetValueAsInt16(self, *args)
    def GetValueAsInt8(self, *args): return _XdmfUtils.XdmfArray_GetValueAsInt8(self, *args)
    def GetValues(self, Index = 0, NumberOfValues = 0, ArrayStride = 1): return _XdmfUtils.XdmfArray_GetValues(self, Index, NumberOfValues, ArrayStride)
    def Generate(self, *args): return _XdmfUtils.XdmfArray_Generate(self, *args)
    def Clone(self, Start = 0, End = 0): return _XdmfUtils.XdmfArray_Clone(self, Start, End)
    def Reference(self, Start = 0, End = 0): return _XdmfUtils.XdmfArray_Reference(self, Start, End)
    def GetMaxAsFloat64(self): return _XdmfUtils.XdmfArray_GetMaxAsFloat64(self)
    def GetMinAsFloat64(self): return _XdmfUtils.XdmfArray_GetMinAsFloat64(self)
    def GetMaxAsInt64(self): return _XdmfUtils.XdmfArray_GetMaxAsInt64(self)
    def GetMinAsInt64(self): return _XdmfUtils.XdmfArray_GetMinAsInt64(self)
    def GetMean(self): return _XdmfUtils.XdmfArray_GetMean(self)
    def SetDataFromChars(self, *args): return _XdmfUtils.XdmfArray_SetDataFromChars(self, *args)
    def GetDataPointerAsCharPointer(self): return _XdmfUtils.XdmfArray_GetDataPointerAsCharPointer(self)
XdmfArray_swigregister = _XdmfUtils.XdmfArray_swigregister
XdmfArray_swigregister(XdmfArray)

class XdmfArrayList(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, XdmfArrayList, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, XdmfArrayList, name)
    __repr__ = _swig_repr
    __swig_setmethods__["name"] = _XdmfUtils.XdmfArrayList_name_set
    __swig_getmethods__["name"] = _XdmfUtils.XdmfArrayList_name_get
    if _newclass:name = _swig_property(_XdmfUtils.XdmfArrayList_name_get, _XdmfUtils.XdmfArrayList_name_set)
    __swig_setmethods__["timecntr"] = _XdmfUtils.XdmfArrayList_timecntr_set
    __swig_getmethods__["timecntr"] = _XdmfUtils.XdmfArrayList_timecntr_get
    if _newclass:timecntr = _swig_property(_XdmfUtils.XdmfArrayList_timecntr_get, _XdmfUtils.XdmfArrayList_timecntr_set)
    __swig_setmethods__["Array"] = _XdmfUtils.XdmfArrayList_Array_set
    __swig_getmethods__["Array"] = _XdmfUtils.XdmfArrayList_Array_get
    if _newclass:Array = _swig_property(_XdmfUtils.XdmfArrayList_Array_get, _XdmfUtils.XdmfArrayList_Array_set)
    def __init__(self): 
        this = _XdmfUtils.new_XdmfArrayList()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _XdmfUtils.delete_XdmfArrayList
    __del__ = lambda self : None;
XdmfArrayList_swigregister = _XdmfUtils.XdmfArrayList_swigregister
XdmfArrayList_swigregister(XdmfArrayList)


def TagNameToArray(*args):
  return _XdmfUtils.TagNameToArray(*args)
TagNameToArray = _XdmfUtils.TagNameToArray

def PrintAllXdmfArrays():
  return _XdmfUtils.PrintAllXdmfArrays()
PrintAllXdmfArrays = _XdmfUtils.PrintAllXdmfArrays

def GetCurrentArrayTime():
  return _XdmfUtils.GetCurrentArrayTime()
GetCurrentArrayTime = _XdmfUtils.GetCurrentArrayTime
class XdmfLightData(XdmfObject):
    __swig_setmethods__ = {}
    for _s in [XdmfObject]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, XdmfLightData, name, value)
    __swig_getmethods__ = {}
    for _s in [XdmfObject]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, XdmfLightData, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _XdmfUtils.new_XdmfLightData()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _XdmfUtils.delete_XdmfLightData
    __del__ = lambda self : None;
    def GetClassName(self): return _XdmfUtils.XdmfLightData_GetClassName(self)
    def SetName(self, *args): return _XdmfUtils.XdmfLightData_SetName(self, *args)
    def GetName(self): return _XdmfUtils.XdmfLightData_GetName(self)
    def SetFileName(self, *args): return _XdmfUtils.XdmfLightData_SetFileName(self, *args)
    def GetFileName(self): return _XdmfUtils.XdmfLightData_GetFileName(self)
    def SetWorkingDirectory(self, *args): return _XdmfUtils.XdmfLightData_SetWorkingDirectory(self, *args)
    def GetWorkingDirectory(self): return _XdmfUtils.XdmfLightData_GetWorkingDirectory(self)
    def GetInitialized(self): return _XdmfUtils.XdmfLightData_GetInitialized(self)
    def SetInitialized(self, *args): return _XdmfUtils.XdmfLightData_SetInitialized(self, *args)
    def GetReturnBuffer(self): return _XdmfUtils.XdmfLightData_GetReturnBuffer(self)
XdmfLightData_swigregister = _XdmfUtils.XdmfLightData_swigregister
XdmfLightData_swigregister(XdmfLightData)

def GetNextOlderArray(*args):
  return _XdmfUtils.GetNextOlderArray(*args)
GetNextOlderArray = _XdmfUtils.GetNextOlderArray

XDMF_ELEMENT_STATE_UNINITIALIZED = _XdmfUtils.XDMF_ELEMENT_STATE_UNINITIALIZED
XDMF_ELEMENT_STATE_LIGHT_PARSED = _XdmfUtils.XDMF_ELEMENT_STATE_LIGHT_PARSED
XDMF_ELEMENT_STATE_HEAVY_READ = _XdmfUtils.XDMF_ELEMENT_STATE_HEAVY_READ
class XdmfElement(XdmfLightData):
    __swig_setmethods__ = {}
    for _s in [XdmfLightData]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, XdmfElement, name, value)
    __swig_getmethods__ = {}
    for _s in [XdmfLightData]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, XdmfElement, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _XdmfUtils.new_XdmfElement()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _XdmfUtils.delete_XdmfElement
    __del__ = lambda self : None;
    def GetClassName(self): return _XdmfUtils.XdmfElement_GetClassName(self)
    def SetDOM(self, *args): return _XdmfUtils.XdmfElement_SetDOM(self, *args)
    def GetDOM(self): return _XdmfUtils.XdmfElement_GetDOM(self)
    def SetState(self, *args): return _XdmfUtils.XdmfElement_SetState(self, *args)
    def GetState(self): return _XdmfUtils.XdmfElement_GetState(self)
    def SetIsReference(self, *args): return _XdmfUtils.XdmfElement_SetIsReference(self, *args)
    def GetIsReference(self): return _XdmfUtils.XdmfElement_GetIsReference(self)
    def CheckForReference(self, *args): return _XdmfUtils.XdmfElement_CheckForReference(self, *args)
    def InsertChildElement(self, *args): return _XdmfUtils.XdmfElement_InsertChildElement(self, *args)
    def Serialize(self): return _XdmfUtils.XdmfElement_Serialize(self)
    def SetElement(self, *args): return _XdmfUtils.XdmfElement_SetElement(self, *args)
    def GetElement(self): return _XdmfUtils.XdmfElement_GetElement(self)
    def SetCopyReferenceData(self, *args): return _XdmfUtils.XdmfElement_SetCopyReferenceData(self, *args)
    def GetCopyReferenceData(self): return _XdmfUtils.XdmfElement_GetCopyReferenceData(self)
    def GetElementName(self): return _XdmfUtils.XdmfElement_GetElementName(self)
    def SetElementName(self, *args): return _XdmfUtils.XdmfElement_SetElementName(self, *args)
    def GetDataXml(self): return _XdmfUtils.XdmfElement_GetDataXml(self)
    def SetDataXml(self, *args): return _XdmfUtils.XdmfElement_SetDataXml(self, *args)
    def GetInsertedDataXml(self): return _XdmfUtils.XdmfElement_GetInsertedDataXml(self)
    def SetInsertedDataXml(self, *args): return _XdmfUtils.XdmfElement_SetInsertedDataXml(self, *args)
    def BuildFromDataXml(self, AllowCData = 0): return _XdmfUtils.XdmfElement_BuildFromDataXml(self, AllowCData)
    def GetElementType(self): return _XdmfUtils.XdmfElement_GetElementType(self)
    def UpdateInformation(self): return _XdmfUtils.XdmfElement_UpdateInformation(self)
    def Update(self): return _XdmfUtils.XdmfElement_Update(self)
    def Build(self): return _XdmfUtils.XdmfElement_Build(self)
    def Set(self, *args): return _XdmfUtils.XdmfElement_Set(self, *args)
    def Get(self, *args): return _XdmfUtils.XdmfElement_Get(self, *args)
    def Copy(self, *args): return _XdmfUtils.XdmfElement_Copy(self, *args)
    def Insert(self, Child = None): return _XdmfUtils.XdmfElement_Insert(self, Child)
    def FollowReference(self, *args): return _XdmfUtils.XdmfElement_FollowReference(self, *args)
    def GetDsmBuffer(self): return _XdmfUtils.XdmfElement_GetDsmBuffer(self)
    def SetDsmBuffer(self, *args): return _XdmfUtils.XdmfElement_SetDsmBuffer(self, *args)
    def SetDeleteOnGridDelete(self, *args): return _XdmfUtils.XdmfElement_SetDeleteOnGridDelete(self, *args)
    def GetDeleteOnGridDelete(self): return _XdmfUtils.XdmfElement_GetDeleteOnGridDelete(self)
XdmfElement_swigregister = _XdmfUtils.XdmfElement_swigregister
XdmfElement_swigregister(XdmfElement)

XDMF_GRID_UNIFORM = _XdmfUtils.XDMF_GRID_UNIFORM
XDMF_GRID_COLLECTION = _XdmfUtils.XDMF_GRID_COLLECTION
XDMF_GRID_TREE = _XdmfUtils.XDMF_GRID_TREE
XDMF_GRID_SUBSET = _XdmfUtils.XDMF_GRID_SUBSET
XDMF_GRID_UNSET = _XdmfUtils.XDMF_GRID_UNSET
XDMF_GRID_MASK = _XdmfUtils.XDMF_GRID_MASK
XDMF_GRID_SECTION_ALL = _XdmfUtils.XDMF_GRID_SECTION_ALL
XDMF_GRID_SECTION_DATA_ITEM = _XdmfUtils.XDMF_GRID_SECTION_DATA_ITEM
XDMF_GRID_SECTION_MASK = _XdmfUtils.XDMF_GRID_SECTION_MASK
XDMF_GRID_COLLECTION_TEMPORAL = _XdmfUtils.XDMF_GRID_COLLECTION_TEMPORAL
XDMF_GRID_COLLECTION_SPATIAL = _XdmfUtils.XDMF_GRID_COLLECTION_SPATIAL
XDMF_GRID_COLLECTION_UNSET = _XdmfUtils.XDMF_GRID_COLLECTION_UNSET
class XdmfGrid(XdmfElement):
    __swig_setmethods__ = {}
    for _s in [XdmfElement]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, XdmfGrid, name, value)
    __swig_getmethods__ = {}
    for _s in [XdmfElement]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, XdmfGrid, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _XdmfUtils.new_XdmfGrid()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _XdmfUtils.delete_XdmfGrid
    __del__ = lambda self : None;
    def GetClassName(self): return _XdmfUtils.XdmfGrid_GetClassName(self)
    def SetGeometry(self, *args): return _XdmfUtils.XdmfGrid_SetGeometry(self, *args)
    def GetGeometry(self): return _XdmfUtils.XdmfGrid_GetGeometry(self)
    def SetTopology(self, *args): return _XdmfUtils.XdmfGrid_SetTopology(self, *args)
    def GetTopology(self): return _XdmfUtils.XdmfGrid_GetTopology(self)
    def SetTime(self, *args): return _XdmfUtils.XdmfGrid_SetTime(self, *args)
    def GetTime(self): return _XdmfUtils.XdmfGrid_GetTime(self)
    def GetGridTypeAsString(self): return _XdmfUtils.XdmfGrid_GetGridTypeAsString(self)
    def SetGridTypeFromString(self, *args): return _XdmfUtils.XdmfGrid_SetGridTypeFromString(self, *args)
    def GetCollectionTypeAsString(self): return _XdmfUtils.XdmfGrid_GetCollectionTypeAsString(self)
    def SetCollectionTypeFromString(self, *args): return _XdmfUtils.XdmfGrid_SetCollectionTypeFromString(self, *args)
    def Build(self): return _XdmfUtils.XdmfGrid_Build(self)
    def InsertTopology(self): return _XdmfUtils.XdmfGrid_InsertTopology(self)
    def InsertGeometry(self): return _XdmfUtils.XdmfGrid_InsertGeometry(self)
    def Insert(self, *args): return _XdmfUtils.XdmfGrid_Insert(self, *args)
    def GetGridType(self): return _XdmfUtils.XdmfGrid_GetGridType(self)
    def SetGridType(self, *args): return _XdmfUtils.XdmfGrid_SetGridType(self, *args)
    def GetCollectionType(self): return _XdmfUtils.XdmfGrid_GetCollectionType(self)
    def SetCollectionType(self, *args): return _XdmfUtils.XdmfGrid_SetCollectionType(self, *args)
    def GetBuildTime(self): return _XdmfUtils.XdmfGrid_GetBuildTime(self)
    def SetBuildTime(self, *args): return _XdmfUtils.XdmfGrid_SetBuildTime(self, *args)
    def Copy(self, *args): return _XdmfUtils.XdmfGrid_Copy(self, *args)
    def GetNumberOfChildren(self): return _XdmfUtils.XdmfGrid_GetNumberOfChildren(self)
    def SetNumberOfChildren(self, *args): return _XdmfUtils.XdmfGrid_SetNumberOfChildren(self, *args)
    def IsUniform(self): return _XdmfUtils.XdmfGrid_IsUniform(self)
    def GetNumberOfAttributes(self): return _XdmfUtils.XdmfGrid_GetNumberOfAttributes(self)
    def GetNumberOfSets(self): return _XdmfUtils.XdmfGrid_GetNumberOfSets(self)
    def GetNumberOfInformations(self): return _XdmfUtils.XdmfGrid_GetNumberOfInformations(self)
    def GetAttribute(self, *args): return _XdmfUtils.XdmfGrid_GetAttribute(self, *args)
    def GetSets(self, *args): return _XdmfUtils.XdmfGrid_GetSets(self, *args)
    def AssignAttribute(self, *args): return _XdmfUtils.XdmfGrid_AssignAttribute(self, *args)
    def AssignAttributeByIndex(self, *args): return _XdmfUtils.XdmfGrid_AssignAttributeByIndex(self, *args)
    def AssignAttributeByName(self, *args): return _XdmfUtils.XdmfGrid_AssignAttributeByName(self, *args)
    def GetAssignedAttribute(self): return _XdmfUtils.XdmfGrid_GetAssignedAttribute(self)
    def GetAssignedAttributeIndex(self): return _XdmfUtils.XdmfGrid_GetAssignedAttributeIndex(self)
    def UpdateInformation(self): return _XdmfUtils.XdmfGrid_UpdateInformation(self)
    def Update(self): return _XdmfUtils.XdmfGrid_Update(self)
    def GetChild(self, *args): return _XdmfUtils.XdmfGrid_GetChild(self, *args)
    def GetInformation(self, *args): return _XdmfUtils.XdmfGrid_GetInformation(self, *args)
    def FindGridsInTimeRange(self, *args): return _XdmfUtils.XdmfGrid_FindGridsInTimeRange(self, *args)
    def FindGridsAtTime(self, *args): return _XdmfUtils.XdmfGrid_FindGridsAtTime(self, *args)
    def Release(self): return _XdmfUtils.XdmfGrid_Release(self)
XdmfGrid_swigregister = _XdmfUtils.XdmfGrid_swigregister
XdmfGrid_swigregister(XdmfGrid)


def HandleToXdmfGrid(*args):
  return _XdmfUtils.HandleToXdmfGrid(*args)
HandleToXdmfGrid = _XdmfUtils.HandleToXdmfGrid
class XdmfDOM(XdmfLightData):
    __swig_setmethods__ = {}
    for _s in [XdmfLightData]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, XdmfDOM, name, value)
    __swig_getmethods__ = {}
    for _s in [XdmfLightData]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, XdmfDOM, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _XdmfUtils.new_XdmfDOM()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _XdmfUtils.delete_XdmfDOM
    __del__ = lambda self : None;
    def GetClassName(self): return _XdmfUtils.XdmfDOM_GetClassName(self)
    def SetInputFileName(self, *args): return _XdmfUtils.XdmfDOM_SetInputFileName(self, *args)
    def SetOutputFileName(self, *args): return _XdmfUtils.XdmfDOM_SetOutputFileName(self, *args)
    def GetInputFileName(self): return _XdmfUtils.XdmfDOM_GetInputFileName(self)
    def GetOutputFileName(self): return _XdmfUtils.XdmfDOM_GetOutputFileName(self)
    def SetParserOptions(self, *args): return _XdmfUtils.XdmfDOM_SetParserOptions(self, *args)
    def GetOutput(self): return _XdmfUtils.XdmfDOM_GetOutput(self)
    def SetOutput(self, *args): return _XdmfUtils.XdmfDOM_SetOutput(self, *args)
    def GetInput(self): return _XdmfUtils.XdmfDOM_GetInput(self)
    def SetInput(self, *args): return _XdmfUtils.XdmfDOM_SetInput(self, *args)
    def GenerateHead(self): return _XdmfUtils.XdmfDOM_GenerateHead(self)
    def GetDTD(self): return _XdmfUtils.XdmfDOM_GetDTD(self)
    def SetDTD(self, *args): return _XdmfUtils.XdmfDOM_SetDTD(self, *args)
    def Puts(self, *args): return _XdmfUtils.XdmfDOM_Puts(self, *args)
    def GenerateTail(self): return _XdmfUtils.XdmfDOM_GenerateTail(self)
    def GetTree(self): return _XdmfUtils.XdmfDOM_GetTree(self)
    def __Parse(self, *args): return _XdmfUtils.XdmfDOM___Parse(self, *args)
    def Parse(self, xml = None): return _XdmfUtils.XdmfDOM_Parse(self, xml)
    def GetRoot(self): return _XdmfUtils.XdmfDOM_GetRoot(self)
    def GetNumberOfChildren(self, node = None): return _XdmfUtils.XdmfDOM_GetNumberOfChildren(self, node)
    def GetChild(self, *args): return _XdmfUtils.XdmfDOM_GetChild(self, *args)
    def GetNumberOfAttributes(self, *args): return _XdmfUtils.XdmfDOM_GetNumberOfAttributes(self, *args)
    def GetAttributeName(self, *args): return _XdmfUtils.XdmfDOM_GetAttributeName(self, *args)
    def IsChild(self, *args): return _XdmfUtils.XdmfDOM_IsChild(self, *args)
    def Serialize(self, node = None): return _XdmfUtils.XdmfDOM_Serialize(self, node)
    def Write(self, Output = None): return _XdmfUtils.XdmfDOM_Write(self, Output)
    def Insert(self, *args): return _XdmfUtils.XdmfDOM_Insert(self, *args)
    def InsertFromString(self, *args): return _XdmfUtils.XdmfDOM_InsertFromString(self, *args)
    def Create(self, RootElementName = "Xdmf", Version = "2.0"): return _XdmfUtils.XdmfDOM_Create(self, RootElementName, Version)
    def InsertNew(self, *args): return _XdmfUtils.XdmfDOM_InsertNew(self, *args)
    def DeleteNode(self, *args): return _XdmfUtils.XdmfDOM_DeleteNode(self, *args)
    def FindElement(self, *args): return _XdmfUtils.XdmfDOM_FindElement(self, *args)
    def FindNextElement(self, *args): return _XdmfUtils.XdmfDOM_FindNextElement(self, *args)
    def FindDataElement(self, Index = 0, Node = None, IgnoreInfo = 1): return _XdmfUtils.XdmfDOM_FindDataElement(self, Index, Node, IgnoreInfo)
    def FindElementByAttribute(self, *args): return _XdmfUtils.XdmfDOM_FindElementByAttribute(self, *args)
    def FindElementByPath(self, *args): return _XdmfUtils.XdmfDOM_FindElementByPath(self, *args)
    def FindNumberOfElements(self, *args): return _XdmfUtils.XdmfDOM_FindNumberOfElements(self, *args)
    def FindNumberOfElementsByAttribute(self, *args): return _XdmfUtils.XdmfDOM_FindNumberOfElementsByAttribute(self, *args)
    def GetPath(self, *args): return _XdmfUtils.XdmfDOM_GetPath(self, *args)
    def GetNdgmHost(self): return _XdmfUtils.XdmfDOM_GetNdgmHost(self)
    def SetNdgmHost(self, *args): return _XdmfUtils.XdmfDOM_SetNdgmHost(self, *args)
    def Get(self, *args): return _XdmfUtils.XdmfDOM_Get(self, *args)
    def GetAttribute(self, *args): return _XdmfUtils.XdmfDOM_GetAttribute(self, *args)
    def GetCData(self, *args): return _XdmfUtils.XdmfDOM_GetCData(self, *args)
    def Set(self, *args): return _XdmfUtils.XdmfDOM_Set(self, *args)
XdmfDOM_swigregister = _XdmfUtils.XdmfDOM_swigregister
XdmfDOM_swigregister(XdmfDOM)


def HandleToXdmfDOM(*args):
  return _XdmfUtils.HandleToXdmfDOM(*args)
HandleToXdmfDOM = _XdmfUtils.HandleToXdmfDOM
class XdmfDomain(XdmfElement):
    __swig_setmethods__ = {}
    for _s in [XdmfElement]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, XdmfDomain, name, value)
    __swig_getmethods__ = {}
    for _s in [XdmfElement]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, XdmfDomain, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _XdmfUtils.new_XdmfDomain()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _XdmfUtils.delete_XdmfDomain
    __del__ = lambda self : None;
    def GetClassName(self): return _XdmfUtils.XdmfDomain_GetClassName(self)
    def UpdateInformation(self): return _XdmfUtils.XdmfDomain_UpdateInformation(self)
    def Insert(self, *args): return _XdmfUtils.XdmfDomain_Insert(self, *args)
    def Build(self): return _XdmfUtils.XdmfDomain_Build(self)
XdmfDomain_swigregister = _XdmfUtils.XdmfDomain_swigregister
XdmfDomain_swigregister(XdmfDomain)

class XdmfRoot(XdmfElement):
    __swig_setmethods__ = {}
    for _s in [XdmfElement]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, XdmfRoot, name, value)
    __swig_getmethods__ = {}
    for _s in [XdmfElement]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, XdmfRoot, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _XdmfUtils.new_XdmfRoot()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _XdmfUtils.delete_XdmfRoot
    __del__ = lambda self : None;
    def GetClassName(self): return _XdmfUtils.XdmfRoot_GetClassName(self)
    def UpdateInformation(self): return _XdmfUtils.XdmfRoot_UpdateInformation(self)
    def Insert(self, *args): return _XdmfUtils.XdmfRoot_Insert(self, *args)
    def SetVersion(self, *args): return _XdmfUtils.XdmfRoot_SetVersion(self, *args)
    def SetXInclude(self, *args): return _XdmfUtils.XdmfRoot_SetXInclude(self, *args)
    def Build(self): return _XdmfUtils.XdmfRoot_Build(self)
    def GetXInclude(self): return _XdmfUtils.XdmfRoot_GetXInclude(self)
    def GetVersion(self): return _XdmfUtils.XdmfRoot_GetVersion(self)
XdmfRoot_swigregister = _XdmfUtils.XdmfRoot_swigregister
XdmfRoot_swigregister(XdmfRoot)

class XdmfDiff(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, XdmfDiff, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, XdmfDiff, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _XdmfUtils.new_XdmfDiff(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _XdmfUtils.delete_XdmfDiff
    __del__ = lambda self : None;
    def GetDiffs(self, *args): return _XdmfUtils.XdmfDiff_GetDiffs(self, *args)
    def SetIgnoreTime(self, value = True): return _XdmfUtils.XdmfDiff_SetIgnoreTime(self, value)
    def GetIgnoreTime(self): return _XdmfUtils.XdmfDiff_GetIgnoreTime(self)
    def SetIgnoreGeometry(self, value = True): return _XdmfUtils.XdmfDiff_SetIgnoreGeometry(self, value)
    def GetIgnoreGeometry(self): return _XdmfUtils.XdmfDiff_GetIgnoreGeometry(self)
    def SetIgnoreTopology(self, value = True): return _XdmfUtils.XdmfDiff_SetIgnoreTopology(self, value)
    def GetIgnoreTopology(self): return _XdmfUtils.XdmfDiff_GetIgnoreTopology(self)
    def SetIgnoreAllAttributes(self, value = True): return _XdmfUtils.XdmfDiff_SetIgnoreAllAttributes(self, value)
    def GetIgnoreAllAttributes(self): return _XdmfUtils.XdmfDiff_GetIgnoreAllAttributes(self)
    def SetDisplayFailuresOnly(self, value = True): return _XdmfUtils.XdmfDiff_SetDisplayFailuresOnly(self, value)
    def GetDisplayFailuresOnly(self): return _XdmfUtils.XdmfDiff_GetDisplayFailuresOnly(self)
    def SetVerboseOutput(self, value = True): return _XdmfUtils.XdmfDiff_SetVerboseOutput(self, value)
    def GetVerboseOutput(self): return _XdmfUtils.XdmfDiff_GetVerboseOutput(self)
    def SetCreateDiffFile(self, value = True): return _XdmfUtils.XdmfDiff_SetCreateDiffFile(self, value)
    def GetCreateDiffFile(self): return _XdmfUtils.XdmfDiff_GetCreateDiffFile(self)
    def SetDiffFileName(self, *args): return _XdmfUtils.XdmfDiff_SetDiffFileName(self, *args)
    def GetDiffFileName(self): return _XdmfUtils.XdmfDiff_GetDiffFileName(self)
    def SetRelativeError(self, *args): return _XdmfUtils.XdmfDiff_SetRelativeError(self, *args)
    def GetRelativeError(self): return _XdmfUtils.XdmfDiff_GetRelativeError(self)
    def SetAbsoluteError(self, *args): return _XdmfUtils.XdmfDiff_SetAbsoluteError(self, *args)
    def GetAbsoluteError(self): return _XdmfUtils.XdmfDiff_GetAbsoluteError(self)
    def IncludeGrid(self, *args): return _XdmfUtils.XdmfDiff_IncludeGrid(self, *args)
    def IgnoreGrid(self, *args): return _XdmfUtils.XdmfDiff_IgnoreGrid(self, *args)
    def IncludeAttribute(self, *args): return _XdmfUtils.XdmfDiff_IncludeAttribute(self, *args)
    def IgnoreAttribute(self, *args): return _XdmfUtils.XdmfDiff_IgnoreAttribute(self, *args)
    def ParseSettingsFile(self, *args): return _XdmfUtils.XdmfDiff_ParseSettingsFile(self, *args)
    def AreEquivalent(self): return _XdmfUtils.XdmfDiff_AreEquivalent(self)
XdmfDiff_swigregister = _XdmfUtils.XdmfDiff_swigregister
XdmfDiff_swigregister(XdmfDiff)



